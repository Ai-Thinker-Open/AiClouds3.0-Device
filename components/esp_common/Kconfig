menu "Common ESP-related"

    config ESP_ERR_TO_NAME_LOOKUP
        bool "Enable lookup of error code strings"
        default "y"
        help
            Functions esp_err_to_name() and esp_err_to_name_r() return string representations of error codes from a
            pre-generated lookup table. This option can be used to turn off the use of the look-up table in order to
            save memory but this comes at the price of sacrificing distinguishable (meaningful) output string
            representations.

    config ESP_SYSTEM_EVENT_QUEUE_SIZE
        int "System event queue size"
        default 32
        help
            Config system event queue size in different application.

    config ESP_SYSTEM_EVENT_TASK_STACK_SIZE
        int "Event loop task stack size"
        default 2048
        help
            Config system event task stack size in different application.

    config ESP_MAIN_TASK_STACK_SIZE
        int "Main task stack size"
        default 3584
        help
            Configure the "main task" stack size. This is the stack of the task
            which calls app_main(). If app_main() returns then this task is deleted
            and its stack memory is freed.

    config ESP_TIMER_TASK_STACK_SIZE
        int "High-resolution timer task stack size"
        default 3584
        range 2048 65536
        help
            Configure the stack size of esp_timer/ets_timer task. This task is used
            to dispatch callbacks of timers created using ets_timer and esp_timer
            APIs. If you are seing stack overflow errors in timer task, increase
            this value.

            Note that this is not the same as FreeRTOS timer task. To configure
            FreeRTOS timer task size, see "FreeRTOS timer task stack size" option
            in "FreeRTOS" menu.

    choice ESP_CONSOLE_UART
        prompt "UART for console output"
        default ESP_CONSOLE_UART_DEFAULT
        help
            Select whether to use UART for console output (through stdout and stderr).

            - Default is to use UART0 on pins GPIO1(TX) and GPIO3(RX).
            - If "Custom" is selected, UART0 or UART1 can be chosen,
              and any pins can be selected.
            - If "None" is selected, there will be no console output on any UART, except
              for initial output from ROM bootloader. This output can be further suppressed by
              bootstrapping GPIO13 pin to low logic level.

        config ESP_CONSOLE_UART_DEFAULT
            bool "Default: UART0, TX=GPIO1, RX=GPIO3"
        config ESP_CONSOLE_UART_CUSTOM
            bool "Custom"
        config ESP_CONSOLE_UART_NONE
            bool "None"
    endchoice

    choice ESP_CONSOLE_UART_NUM
        prompt "UART peripheral to use for console output (0-1)"
        depends on ESP_CONSOLE_UART_CUSTOM
        default ESP_CONSOLE_UART_CUSTOM_NUM_0
        help
            Due of a ROM bug, UART2 is not supported for console output
            via ets_printf.

        config ESP_CONSOLE_UART_CUSTOM_NUM_0
            bool "UART0"
        config ESP_CONSOLE_UART_CUSTOM_NUM_1
            bool "UART1"
    endchoice

    config ESP_CONSOLE_UART_NUM
        int
        default 0 if ESP_CONSOLE_UART_DEFAULT || ESP_CONSOLE_UART_NONE
        default 0 if ESP_CONSOLE_UART_CUSTOM_NUM_0
        default 1 if ESP_CONSOLE_UART_CUSTOM_NUM_1

    config ESP_CONSOLE_UART_BAUDRATE
        int "UART console baud rate"
        depends on !ESP_CONSOLE_UART_NONE
        default 74880
        range 1200 4000000

    config ESP_UART0_SWAP_IO
        bool "Swap UART0 I/O pins"
        default n
        help
            Enable this option, UART0's I/O pins are swaped: TXD <-> RTS, RTX <-> CTS.

    config ESP_TASK_WDT
        bool "Initialize Task Watchdog Timer on startup"
        default y
        help
            The Task Watchdog Timer can be used to make sure individual tasks are still
            running. Enabling this option will cause the Task Watchdog Timer to be
            initialized automatically at startup. The Task Watchdog timer can be
            initialized after startup as well (see Task Watchdog Timer API Reference)

    config ESP_TASK_WDT_PANIC
        bool "Invoke panic handler on Task Watchdog timeout"
        depends on ESP_TASK_WDT
        default y
        help
            If this option is enabled, the Task Watchdog Timer will be configured to
            trigger the panic handler when it times out. This can also be configured
            at run time (see Task Watchdog Timer API Reference)

    choice ESP_TASK_WDT_TIMEOUT_S
        prompt "Task Watchdog timeout period (seconds)"
        default ESP_TASK_WDT_TIMEOUT_15N
        help
            Timeout period configuration for the Task Watchdog Timer in seconds.
            This is also configurable at run time.

        config ESP_TASK_WDT_TIMEOUT_13N
            bool "6.5536s"
        config ESP_TASK_WDT_TIMEOUT_14N
            bool "13.1072s"
        config ESP_TASK_WDT_TIMEOUT_15N
            bool "26.2144s"
    endchoice

    config ESP_TASK_WDT_TIMEOUT_S
        int
        default 13 if ESP_TASK_WDT_TIMEOUT_13N
        default 14 if ESP_TASK_WDT_TIMEOUT_14N
        default 15 if ESP_TASK_WDT_TIMEOUT_15N

endmenu # Common ESP-related
